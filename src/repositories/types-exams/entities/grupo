import {
  Column,
  Entity,
  JoinColumn,
  JoinTable,
  ManyToMany,
  ManyToOne,
  OneToMany,
  PrimaryGeneratedColumn,
} from 'typeorm';

import { ExamGroup } from './exam-group.entity';
import { Exam } from './exam.entity';
import { StudyExams } from './study-exams.entity';
import { TypesExam } from './types-exam.entity';

@Entity()
export class ExamGroup {
  @PrimaryGeneratedColumn()
  id: number;

  @Column({ nullable: false })
  name: string;

  @ManyToMany(() => Exam, exam => exam.examGroups)
  exams: Exam[];
}

@Entity()
export class Exam extends IdEntity {
  @Column({ nullable: false, unique: true })
  name!: string;

  @Column({ nullable: true })
  description?: string;

  @Column({ nullable: false })
  price!: number;

  @Column({ nullable: false })
  unitedCheck!: boolean;

  @Column({ nullable: true })
  united?: string;

  @Column({ nullable: false })
  valuesCheck!: boolean;

  @Column({ nullable: true })
  values?: string;

  @ManyToOne(() => TypesExam, (typesExam) => typesExam.id)
  @JoinColumn()
  typesExam?: TypesExam;

  @OneToMany(() => StudyExams, (studyExams) => studyExams.exam)
  studyExams: StudyExams[];

  @ManyToMany(() => ExamGroup, examGroup => examGroup.exams)
  @JoinTable()
  examGroups: ExamGroup[];
}
